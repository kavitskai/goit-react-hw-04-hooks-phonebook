{"version":3,"sources":["App/App.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","App/App.jsx","index.js"],"names":["Main","styled","main","Section","section","Form","h1","form","Label","label","Input","input","Button","button","ContactForm","onSubmit","useState","name","setName","number","setNumber","nameId","uuidv4","telId","handleChange","evt","currentTarget","value","resetForm","preventDefault","htmlFor","id","type","onChange","pattern","title","placeholder","required","List","ul","Item","li","ContactList","contacts","onDelete","map","onClick","Filter","filterValue","SectionTitle","h2","Title","App","JSON","parse","window","localStorage","getItem","defaultContacts","setContacts","filter","setFilter","useEffect","setItem","stringify","find","contact","toLowerCase","alert","newContact","e","includes","contactId","prevContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e360f32.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Main = styled.main`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  text-align: center;\n  margin: 20px auto;\n  padding: 20px;\n  background-color: #fff;\n  width: 900px;\n`;\n\nexport const Section = styled.section`\n  /* padding: 40px 0; */\n`;\nexport const MainTitle = styled.h1`\n  width: 900px;\n  text-align: center;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  color: #04125e;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form``;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  height: 40px;\n  border: 1px solid #000000;\n  border-radius: 4px;\n  font-size: 16px;\n  margin-top: 10px;\n  &:focus {\n    outline: none;\n    border: 1px solid #04125e;\n  }\n`;\n\nexport const Button = styled.button`\n  min-width: 100px;\n  height: 30px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 12px;\n  color: #fff;\n  text-transform: uppercase;\n  background-color: #9ccdf5;\n  border: none;\n`;\n","import { useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { Form, Label, Input, Button } from \"./ContactForm.styled\";\n\nexport function ContactForm({onSubmit}) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const nameId = uuidv4();\n  const telId = uuidv4();\n\n  const handleChange = (evt) => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n    };\n    \n    const handleSubmit = (evt) => {\n    evt.preventDefault();\n    onSubmit({ name, number });\n    resetForm();\n   };\n\n   const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n   };\n  return (\n      <Form onSubmit={handleSubmit}>\n        <Label htmlFor={nameId}> Name\n          <Input\n            id={nameId}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            placeholder=\"Enter contact name\"\n            required\n          />\n        </Label>\n\n        <Label htmlFor={telId}> Phone Number\n          <Input\n            id={telId}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            placeholder=\"Enter phone number\"\n            required\n          />\n        </Label>\n\n        <Button type=\"submit\">\n          Add contact\n        </Button>\n      </Form>\n    );\n}\nContactForm.propTypes = {\n    onSubmit: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 800px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 25px;\n  font-size: 24px;\n`;\n\nexport const Button = styled.button`\n  min-width: 100px;\n  height: 30px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 12px;\n  color: #fff;\n  text-transform: uppercase;\n  background-color: #9ccdf5;\n  border: none;\n`;\n","import PropTypes from \"prop-types\";\nimport { List, Item, Button } from \"./ContactList.styled\";\n\nexport function ContactList({contacts, onDelete}) {\n    return (\n        <List>\n            {contacts.map(({id, name, number}) => (\n                <Item key={id}>\n                    {name}: {number}\n                    <Button\n                        onClick={() => onDelete(id)}>\n                        Delete\n                    </Button>\n                </Item>\n            ))}\n        </List>\n    )\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        number: PropTypes.string,\n    })),\n}\n","import styled from \"@emotion/styled/macro\";\n\nexport const Input = styled.input`\n  border: 1px solid #000000;\n  border-radius: 4px;\n  font-size: 16px;\n  height: 40px;\n  margin-top: 10px;\n  &:focus {\n    outline: none;\n    border: 1px solid #04125e;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  margin-bottom: 20px;\n`;\n","import PropTypes from \"prop-types\";\nimport { Label, Input } from \"./Filter.styled\";\n\nexport function Filter({ filterValue, onChange }) {\n    return (\n        <Label>Find contacts by name\n            <Input\n                type=\"text\"\n                filterValue={filterValue}\n                onChange={onChange}\n                placeholder=\"Enter contact name\"/>\n        </Label>\n    )\n}\n\nFilter.propTypes = {\n    filterValue: PropTypes.string,\n    onChange: PropTypes.func,\n}\n","import styled from \"@emotion/styled\";\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  color: #04125e;\n`;\n","import PropTypes from \"prop-types\";\nimport { SectionTitle } from \"./Title.styled\";\n\nexport function Title({ title }) {\n    return (\n         <SectionTitle>{title}</SectionTitle>\n    )\n}\n\nTitle.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport defaultContacts from \"../data/contacts.json\";\nimport { Main, Section } from './App.styled';\nimport { ContactForm } from \"../components/ContactForm/ContactForm\";\nimport { ContactList } from \"../components/ContactList/ContactList\";\nimport { Filter } from \"../components/Filter/Filter\";\nimport { Title } from \"../components/Title/Title\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(\"contacts\")) ?? defaultContacts});\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = ({ name, number }) => {\n\n    if (contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is already in contacts`);\n      return\n    }\n      const newContact = {\n        id: uuidv4(),\n        name,\n        number,\n      }\n      setContacts((contacts) => [ newContact, ...contacts])\n  }\n  const filterContact = (e) => {\n    setFilter(e.currentTarget.value);\n  }\n\n  const checkContact = () => {\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  }\n\n  const removeContact = (contactId) => {\n     setContacts(prevContacts => prevContacts.filter(contact => contact.id !== contactId))\n  }\n    return (\n      <Main>\n        <Section>\n          <Title title={\"Phonebook\"} />\n          <ContactForm\n            onSubmit={addContact} />   \n        </Section>\n        <Section>\n          <Title title=\"Search contact\" />\n          <Filter\n            filterValue={filter}\n            onChange={filterContact} />\n        </Section>\n        <Section>\n          <Title title=\"Contacts\"/>\n          <ContactList\n            contacts={checkContact()}\n            onDelete={removeContact} />\n        </Section>\n      </Main>\n  )\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}